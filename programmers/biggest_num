
def quick_sort(array):
    if len(array) <= 1:
        return array
    pivot = array[0]
    tail = array[1:]

    left_side = []
    right_side = []
    for x in tail:
        if x >= pivot:
            left_side.append(x)
        else:
            right_side.append(x)
        
    
    return quick_sort(left_side) + [pivot] + quick_sort(right_side)
from itertools import permutations
def solution(numbers):
    answer = ''
    """
    l = []
    for k in numbers:
        str_k = str(k)
        if len(str_k)==1:
            l.append(k)
        else:
            for j in str_k:
                l.append(int(j))
    l.sort(reverse=True)
    for i in l:
        answer += str(i)
            
    return answer
    
    number = list(map(str, numbers))
    number.sort(reverse=True)
    for i in number:
        answer += i
    
    numbers = list(map(str, numbers))
    l = quick_sort(numbers)
    for i in l:
        answer += i
    """
    perm = list(permutations(numbers, len(numbers)))    
    l = []
    for i in perm:
        num = ''
        for j in i:
            num += str(j)
        l.append(num)

    l.sort(reverse=True)
    answer = l[0]

    return answer

print(solution([6,2,10]))